name: Build Clawdrop CLI

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            archive_ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_ext: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_ext: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive_ext: tar.gz
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $BIN_NAME = "clawdrop"
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item "target/${{ matrix.target }}/release/$BIN_NAME.exe" dist/
          Copy-Item "LICENSE" dist/
          Compress-Archive -Path dist/* -DestinationPath "dist/$BIN_NAME-${{ matrix.target }}.zip" -Force

      - name: Package binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p dist
          BIN_NAME=clawdrop
          cp target/${{ matrix.target }}/release/${BIN_NAME} dist/
          cp LICENSE dist/
          tar -czf dist/${BIN_NAME}-${{ matrix.target }}.tar.gz -C dist ${BIN_NAME} LICENSE

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: clawdrop-${{ matrix.target }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: "Release ${{ github.ref }}"

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/*.tar.gz
            dist/**/*.zip
